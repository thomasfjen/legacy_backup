[gcode_macro PRINT_START]
gcode:        
#PS Start G-Code:
#M104 S0 ; Stops PS/SS from sending temp waits separately
#M140 S0
#PA FILAMENT=[filament_type]
#PRINT_START BED=[first_layer_bed_temperature] HOTEND=[first_layer_temperature[initial_extruder]]

    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    M190 S{bedtemp}                       # set & wait for bed temp
    {% if params.BED|int > 90 %}                                       
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=60
    #SET_FAN_SPEED FAN=bed_fan SPEED=0.8
    TEMPERATURE_WAIT sensor="temperature_fan chamber" minimum={chambertemp}
    {% endif %}
    G28
    Z_TILT_ADJUST
    M109 S150
    BED_MESH_CALIBRATE
    CARTOGRAPHER_TOUCH
    M109 S{hotendtemp}
    SQUIGGLY_PURGE
    G90                                   # absolute positioning

[gcode_macro PRINT_END]
gcode:
#PS END G-CODE:
# END_PRINT
    # Turn off bed, extruder, and fan
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=0
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X10 Y200
    #5mm of retraction to avoid ooze
    M83
    G1 E-5 F300
    # Disable steppers
    M84
    #STATUS_READY

[gcode_shell_command backup_cfg]
command: ~/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
description: Backs up config directory GitHub
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg


[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
[gcode_macro _CG28XY]
gcode:
    {% if "x" not in printer.toolhead.homed_axes %}
        G28 XY
    {% endif %}

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  100
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  100
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state
    
[gcode_macro PREHEAT_CHAMBER]
gcode:
    _CG28
    M140 S110
    G1 X117.5Y117.5Z80
    #SET_FAN_SPEED FAN=bed_fan SPEED=0.8
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=50
    M106 S200
    M84
    


# [gcode_macro LOAD_FILAMENT]
# gcode:
#    M83                            ; set extruder to relative
#    G1 E30 F300                    ; load
#    G1 E15 F150                    ; prime nozzle with filament
#    M82                            ; set extruder to absolute
    
# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#    M83                            ; set extruder to relative
#    G1 E10 F300                    ; extrude a little to soften tip
#    G1 E-40 F1800                  ; retract some, but not too much or it will jam
#    M82

    

[gcode_shell_command backup_cfg]
command: ~/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
description: Backs up config directory GitHub
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg
    M104 S0


[gcode_macro SHUTDOWN]
gcode:
  _MQTT_SHUTDOWN
  {action_call_remote_method("shutdown_machine")}

[gcode_macro _MQTT_SHUTDOWN]
gcode:
  {% set data = params.PAYLOAD|default(None) %}
  {action_call_remote_method("publish_mqtt_topic",
                             topic="legacy/shutdown",
                             payload=1,
                             qos=0,
                             retain=False,
                             use_prefix=True)}



[gcode_macro TOGGLE_BED_FAN]
gcode:
    {% if printer['fan_generic bed_fan'].speed > 0 %}
      SET_FAN_SPEED FAN=bed_fan SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=bed_fan SPEED=0.8
    {% endif %}
    
[gcode_macro TOGGLE_CASELIGHT]
gcode:
    {% if printer['output_pin caselight'].value > 0 %}
      SET_PIN PIN=caselight VALUE=0
    {% else %}
      SET_PIN PIN=caselight VALUE=100
    {% endif %}